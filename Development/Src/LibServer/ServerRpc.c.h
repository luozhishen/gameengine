////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED. DO NOT MODIFY! //
////////////////////////////////////////////////

#ifndef __ServerRpc__CLIENT_STUB__
#define __ServerRpc__CLIENT_STUB__

#include "ServerInc.h"

Atlas::RPC_RESULT SRPC_UserLoginDone(Atlas::HSERVER hServer, _U64 sndx, _U64 cndx);
Atlas::RPC_RESULT SRPC_KickUser(Atlas::HSERVER hServer, _U64 sndx);
Atlas::RPC_RESULT SRPC_ForwardUserData(Atlas::HSERVER hServer, _U64 sndx, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT SRPC_SetNode(Atlas::HSERVER hServer, _U64 sndx, _U32 nodeid, _U64 nndx, _U32 ip, _U16 port);
Atlas::RPC_RESULT CRPC_UserLogin(Atlas::HSERVER hServer, _U32 uid, const char* token, _U64 sndx);
Atlas::RPC_RESULT CRPC_UserLogout(Atlas::HSERVER hServer, _U32 uid, _U64 sndx);
Atlas::RPC_RESULT CRPC_KickUser(Atlas::HSERVER hServer, _U32 uid);
Atlas::RPC_RESULT CRPC_OnUserData(Atlas::HSERVER hServer, _U64 cndx, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_ForwardUserDataByCNDX(Atlas::HSERVER hServer, _U64 cndx, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_ForwardUserDataByUID(Atlas::HSERVER hServer, _U32 uid, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_ForwardUserDataByAID(Atlas::HSERVER hServer, _U32 aid, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_ForwardEventByCNDX(Atlas::HSERVER hServer, _U64 cndx, _U32 nodeid, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_ForwardEventByUID(Atlas::HSERVER hServer, _U32 uid, _U32 nodeid, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_ForwardEventByAID(Atlas::HSERVER hServer, _U32 aid, _U32 nodeid, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT CRPC_NodeConnect(Atlas::HSERVER hServer, _U64 cndx, _U32 nodeid, _U32 nodeseq, _U64 nndx);
Atlas::RPC_RESULT CRPC_NodeDisconnect(Atlas::HSERVER hServer, _U64 cndx, _U32 nodeid, _U32 nodeseq);
Atlas::RPC_RESULT CRPC_SetWorkload(Atlas::HSERVER hServer, _U32 type, const WORKLOAD_INFO& info);
Atlas::RPC_RESULT CRPC_GetWorkload(Atlas::HSERVER hServer);
void CRPC_SessionWorkLoadResult(Atlas::HSERVER hServer, _U32 type, const WORKLOAD_INFO* infos, _U32 count);
Atlas::RPC_RESULT NRPC_Connect(Atlas::HSERVER hServer, _U64 cndx, _U32 nodeid, _U32 nodeseq, _U32 len, const _U8* data);
Atlas::RPC_RESULT NRPC_SessionAck(Atlas::HSERVER hServer, _U64 nndx, _U64 sndx);
Atlas::RPC_RESULT NRPC_Disconnect(Atlas::HSERVER hServer, _U64 nndx, _U32 nodeseq);
Atlas::RPC_RESULT NRPC_OnUserData(Atlas::HSERVER hServer, _U64 nndx, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT NRPC_OnForwardEvent(Atlas::HSERVER hServer, _U64 nndx, _U16 code, _U32 len, const _U8* data);
Atlas::RPC_RESULT WRPC_DoRequest(Atlas::HSERVER hServer, _U64 tid, _U16 code, _U32 len, const _U8* data);

#endif
