////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED. DO NOT MODIFY! //
////////////////////////////////////////////////

#ifndef __ServerRpc__SERVER_STUB___
#define __ServerRpc__SERVER_STUB___

#include "ServerInc.h"

void SRPC_UserLoginDone(Atlas::HCLIENT hClient, _U64 sndx, _U64 cndx);
void SRPC_KickUser(Atlas::HCLIENT hClient, _U64 sndx);
void SRPC_ForwardUserData(Atlas::HCLIENT hClient, _U64 sndx, _U16 code, _U32 len, const _U8* data);
void SRPC_SetNode(Atlas::HCLIENT hClient, _U64 sndx, _U32 nodeid, _U64 nndx, _U32 ip, _U16 port);
void CRPC_UserLogin(Atlas::HCLIENT hClient, _U32 uid, const char* token, _U64 sndx);
void CRPC_UserLogout(Atlas::HCLIENT hClient, _U32 uid, _U64 sndx);
void CRPC_KickUser(Atlas::HCLIENT hClient, _U32 uid);
void CRPC_OnUserData(Atlas::HCLIENT hClient, _U64 cndx, _U16 code, _U32 len, const _U8* data);
void CRPC_ForwardUserDataByCNDX(Atlas::HCLIENT hClient, _U64 cndx, _U16 code, _U32 len, const _U8* data);
void CRPC_ForwardUserDataByUID(Atlas::HCLIENT hClient, _U32 uid, _U16 code, _U32 len, const _U8* data);
void CRPC_ForwardUserDataByAID(Atlas::HCLIENT hClient, _U32 aid, _U16 code, _U32 len, const _U8* data);
void CRPC_ForwardEventByCNDX(Atlas::HCLIENT hClient, _U64 cndx, _U32 nodeid, _U16 code, _U32 len, const _U8* data);
void CRPC_ForwardEventByUID(Atlas::HCLIENT hClient, _U32 uid, _U32 nodeid, _U16 code, _U32 len, const _U8* data);
void CRPC_ForwardEventByAID(Atlas::HCLIENT hClient, _U32 aid, _U32 nodeid, _U16 code, _U32 len, const _U8* data);
void CRPC_NodeConnect(Atlas::HCLIENT hClient, _U64 cndx, _U32 nodeid, _U32 nodeseq, _U64 nndx);
void CRPC_NodeDisconnect(Atlas::HCLIENT hClient, _U64 cndx, _U32 nodeid, _U32 nodeseq);
void CRPC_SetSessionWorkload(Atlas::HCLIENT hClient, const WORKLOAD_INFO& info);
void CRPC_GetSessionWorkload(Atlas::HCLIENT hClient);
Atlas::RPC_RESULT CRPC_SessionWorkLoadResult(Atlas::HCLIENT hClient, const WORKLOAD_INFO* info, _U32 count);
void CRPC_SetNodeWorkload(Atlas::HCLIENT hClient, const WORKLOAD_INFO& info, _U32 type);
void CRPC_GetNodeWorkload(Atlas::HCLIENT hClient, _U32 type);
Atlas::RPC_RESULT CRPC_NodeWorkLoadResult(Atlas::HCLIENT hClient, _U32 type, const WORKLOAD_INFO* info, _U32 count);
void NRPC_Connect(Atlas::HCLIENT hClient, _U64 cndx, _U32 nodeid, _U32 nodeseq, _U32 len, const _U8* data);
void NRPC_SessionAck(Atlas::HCLIENT hClient, _U64 nndx, _U64 sndx);
void NRPC_Disconnect(Atlas::HCLIENT hClient, _U64 nndx, _U32 nodeseq);
void NRPC_OnUserData(Atlas::HCLIENT hClient, _U64 nndx, _U16 code, _U32 len, const _U8* data);
void NRPC_OnForwardEvent(Atlas::HCLIENT hClient, _U64 nndx, _U16 code, _U32 len, const _U8* data);
void WRPC_DoRequest(Atlas::HCLIENT hClient, _U64 tid, _U16 code, _U32 len, const _U8* data);

void SessionRpc_Server_Register();
void ClusterRpc_Server_Register();
void NodeRpc_Server_Register();
void WorkerRpc_Server_Register();

#endif
