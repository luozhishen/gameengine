////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED. DO NOT MODIFY! //
////////////////////////////////////////////////

#ifndef __CONFUSEDNUMBERDDL_DDL_CODEGEN__
#define __CONFUSEDNUMBERDDL_DDL_CODEGEN__

#pragma pack(push)
#pragma pack(4)

struct A_CONFUSED_U32
{
	_U32 value;
	_U32 mask;
};

namespace DDL
{
	template<>
	bool BufferReader::Read<A_CONFUSED_U32>(A_CONFUSED_U32& Value);
	template<>
	bool BufferWriter::Write<A_CONFUSED_U32>(const A_CONFUSED_U32& Value);
}

namespace DDLReflect
{
	template<>
	const STRUCT_INFO* GetStruct<A_CONFUSED_U32>();
	extern STRUCT_INFO _rfl_struct_A_CONFUSED_U32_info;
}

struct A_CONFUSED_S32 : A_CONFUSED_U32
{
};

namespace DDL
{
	template<>
	bool BufferReader::Read<A_CONFUSED_S32>(A_CONFUSED_S32& Value);
	template<>
	bool BufferWriter::Write<A_CONFUSED_S32>(const A_CONFUSED_S32& Value);
}

namespace DDLReflect
{
	template<>
	const STRUCT_INFO* GetStruct<A_CONFUSED_S32>();
	extern STRUCT_INFO _rfl_struct_A_CONFUSED_S32_info;
}

struct A_CONFUSED_F32 : A_CONFUSED_U32
{
};

namespace DDL
{
	template<>
	bool BufferReader::Read<A_CONFUSED_F32>(A_CONFUSED_F32& Value);
	template<>
	bool BufferWriter::Write<A_CONFUSED_F32>(const A_CONFUSED_F32& Value);
}

namespace DDLReflect
{
	template<>
	const STRUCT_INFO* GetStruct<A_CONFUSED_F32>();
	extern STRUCT_INFO _rfl_struct_A_CONFUSED_F32_info;
}


#pragma pack(pop)

#endif
