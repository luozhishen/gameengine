////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED. DO NOT MODIFY! //
////////////////////////////////////////////////

#include "SGStressCaseConfig.h"

namespace DDLReflect
{

	static bool _struct_STRESSCASE_ECHO_CONFIG_readproc(DDL::BufferReader& buf, void* data)
	{
		return buf.Read<STRESSCASE_ECHO_CONFIG>(*((STRESSCASE_ECHO_CONFIG*)data));
	}

	static bool _struct_STRESSCASE_ECHO_CONFIG_writeproc(DDL::BufferWriter& buf, const void* data)
	{
		return buf.Write<STRESSCASE_ECHO_CONFIG>(*((const STRESSCASE_ECHO_CONFIG*)data));
	}

	static FIELD_INFO _struct_STRESSCASE_ECHO_CONFIG_fieldinfo[] =
	{
		{TYPE_U32, "reset_time", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ECHO_CONFIG, reset_time), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
		{TYPE_U32, "retry_time", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ECHO_CONFIG, retry_time), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
		{TYPE_U32, "disconnect_time", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ECHO_CONFIG, disconnect_time), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
	};
	STRUCT_INFO _rfl_struct_STRESSCASE_ECHO_CONFIG_info = { NULL, "STRESSCASE_ECHO_CONFIG", sizeof(STRESSCASE_ECHO_CONFIG), 3, _struct_STRESSCASE_ECHO_CONFIG_fieldinfo, _struct_STRESSCASE_ECHO_CONFIG_readproc, _struct_STRESSCASE_ECHO_CONFIG_writeproc };
	template<>
	const STRUCT_INFO* GetStruct<STRESSCASE_ECHO_CONFIG>()
	{
		return &_rfl_struct_STRESSCASE_ECHO_CONFIG_info;
	}
}

namespace DDLReflect
{

	static bool _struct_STRESSCASE_ECHO_STATUS_readproc(DDL::BufferReader& buf, void* data)
	{
		return buf.Read<STRESSCASE_ECHO_STATUS>(*((STRESSCASE_ECHO_STATUS*)data));
	}

	static bool _struct_STRESSCASE_ECHO_STATUS_writeproc(DDL::BufferWriter& buf, const void* data)
	{
		return buf.Write<STRESSCASE_ECHO_STATUS>(*((const STRESSCASE_ECHO_STATUS*)data));
	}

	static FIELD_INFO _struct_STRESSCASE_ECHO_STATUS_fieldinfo[] =
	{
		{TYPE_U32, "failed_times", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ECHO_STATUS, failed_times), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
		{TYPE_U32, "sucess_time", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ECHO_STATUS, sucess_time), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
	};
	STRUCT_INFO _rfl_struct_STRESSCASE_ECHO_STATUS_info = { NULL, "STRESSCASE_ECHO_STATUS", sizeof(STRESSCASE_ECHO_STATUS), 2, _struct_STRESSCASE_ECHO_STATUS_fieldinfo, _struct_STRESSCASE_ECHO_STATUS_readproc, _struct_STRESSCASE_ECHO_STATUS_writeproc };
	template<>
	const STRUCT_INFO* GetStruct<STRESSCASE_ECHO_STATUS>()
	{
		return &_rfl_struct_STRESSCASE_ECHO_STATUS_info;
	}
}

namespace DDLReflect
{

	static bool _struct_STRESSCASE_ENTERSERVER_CONFIG_readproc(DDL::BufferReader& buf, void* data)
	{
		return buf.Read<STRESSCASE_ENTERSERVER_CONFIG>(*((STRESSCASE_ENTERSERVER_CONFIG*)data));
	}

	static bool _struct_STRESSCASE_ENTERSERVER_CONFIG_writeproc(DDL::BufferWriter& buf, const void* data)
	{
		return buf.Write<STRESSCASE_ENTERSERVER_CONFIG>(*((const STRESSCASE_ENTERSERVER_CONFIG*)data));
	}

	static FIELD_INFO _struct_STRESSCASE_ENTERSERVER_CONFIG_fieldinfo[] =
	{
		{TYPE_U32, "reset_time", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ENTERSERVER_CONFIG, reset_time), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
	};
	STRUCT_INFO _rfl_struct_STRESSCASE_ENTERSERVER_CONFIG_info = { NULL, "STRESSCASE_ENTERSERVER_CONFIG", sizeof(STRESSCASE_ENTERSERVER_CONFIG), 1, _struct_STRESSCASE_ENTERSERVER_CONFIG_fieldinfo, _struct_STRESSCASE_ENTERSERVER_CONFIG_readproc, _struct_STRESSCASE_ENTERSERVER_CONFIG_writeproc };
	template<>
	const STRUCT_INFO* GetStruct<STRESSCASE_ENTERSERVER_CONFIG>()
	{
		return &_rfl_struct_STRESSCASE_ENTERSERVER_CONFIG_info;
	}
}

namespace DDLReflect
{

	static bool _struct_STRESSCASE_ENTERSERVER_STATUS_readproc(DDL::BufferReader& buf, void* data)
	{
		return buf.Read<STRESSCASE_ENTERSERVER_STATUS>(*((STRESSCASE_ENTERSERVER_STATUS*)data));
	}

	static bool _struct_STRESSCASE_ENTERSERVER_STATUS_writeproc(DDL::BufferWriter& buf, const void* data)
	{
		return buf.Write<STRESSCASE_ENTERSERVER_STATUS>(*((const STRESSCASE_ENTERSERVER_STATUS*)data));
	}

	static FIELD_INFO _struct_STRESSCASE_ENTERSERVER_STATUS_fieldinfo[] =
	{
		{TYPE_U32, "failed_times", 0, (_U16)ZION_OFFSETOF(STRESSCASE_ENTERSERVER_STATUS, failed_times), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(_U32), NULL},
	};
	STRUCT_INFO _rfl_struct_STRESSCASE_ENTERSERVER_STATUS_info = { NULL, "STRESSCASE_ENTERSERVER_STATUS", sizeof(STRESSCASE_ENTERSERVER_STATUS), 1, _struct_STRESSCASE_ENTERSERVER_STATUS_fieldinfo, _struct_STRESSCASE_ENTERSERVER_STATUS_readproc, _struct_STRESSCASE_ENTERSERVER_STATUS_writeproc };
	template<>
	const STRUCT_INFO* GetStruct<STRESSCASE_ENTERSERVER_STATUS>()
	{
		return &_rfl_struct_STRESSCASE_ENTERSERVER_STATUS_info;
	}
}

