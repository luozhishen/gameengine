////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED. DO NOT MODIFY! //
////////////////////////////////////////////////

#ifndef __KNIGHTGAMEDDL_DDL_CODEGEN__
#define __KNIGHTGAMEDDL_DDL_CODEGEN__

#include <AtlasDefines.h>
#include <AtlasSTL.h>
#include <AtlasUUID.h>
#include <DDL.h>
#include <DDLProxy.h>
#include <DDLStub.h>
#include <DDLReflect.h>

#pragma pack(push)
#pragma pack(4)

#include "../../LibCommon/CommonDDL.h"

const _U32 DATATEST_RESOURCE_URL_MAX = 128;

const _U32 DATATEST_ARRAY_ELEMENT_MAX = 16;

struct DATATEST_INNER_OBJECT_CONFIG
{
	_U32 IntValue;
	_F32 FloatValue;
	DDL::String<DATATEST_RESOURCE_URL_MAX> StrValue;
};

namespace DDL
{
	template<>
	bool BufferReader::Read<DATATEST_INNER_OBJECT_CONFIG>(DATATEST_INNER_OBJECT_CONFIG& Value);
	template<>
	bool BufferWriter::Write<DATATEST_INNER_OBJECT_CONFIG>(const DATATEST_INNER_OBJECT_CONFIG& Value);
}

namespace DDLReflect
{
	template<>
	const STRUCT_INFO* GetStruct<DATATEST_INNER_OBJECT_CONFIG>();
	extern STRUCT_INFO _rfl_struct_DATATEST_INNER_OBJECT_CONFIG_info;
}

struct DATATEST_INNER_STRUCT_CONFIG
{
	_U32 StructIntValue;
	DDL::Array<_F32, DATATEST_ARRAY_ELEMENT_MAX> StructArrFloatValue;
};

namespace DDL
{
	template<>
	bool BufferReader::Read<DATATEST_INNER_STRUCT_CONFIG>(DATATEST_INNER_STRUCT_CONFIG& Value);
	template<>
	bool BufferWriter::Write<DATATEST_INNER_STRUCT_CONFIG>(const DATATEST_INNER_STRUCT_CONFIG& Value);
}

namespace DDLReflect
{
	template<>
	const STRUCT_INFO* GetStruct<DATATEST_INNER_STRUCT_CONFIG>();
	extern STRUCT_INFO _rfl_struct_DATATEST_INNER_STRUCT_CONFIG_info;
}

struct DATATEST_BASE_CONFIG : A_CONTENT_OBJECT
{
	DDL::String<DATATEST_RESOURCE_URL_MAX> ResourceURL;
	_U32 IntValue;
	_F32 FloatValue;
	_U8 EnumValue;
	DDL::String<DATATEST_RESOURCE_URL_MAX> StrValue;
	DATATEST_INNER_OBJECT_CONFIG ObjectInnerValue;
	DATATEST_INNER_STRUCT_CONFIG StructValue;
	DDL::Array<_U32, DATATEST_ARRAY_ELEMENT_MAX> ArrIntValue;
	DDL::Array<DATATEST_INNER_STRUCT_CONFIG, DATATEST_ARRAY_ELEMENT_MAX> ArrStructValue;
};

namespace DDL
{
	template<>
	bool BufferReader::Read<DATATEST_BASE_CONFIG>(DATATEST_BASE_CONFIG& Value);
	template<>
	bool BufferWriter::Write<DATATEST_BASE_CONFIG>(const DATATEST_BASE_CONFIG& Value);
}

namespace DDLReflect
{
	template<>
	const STRUCT_INFO* GetStruct<DATATEST_BASE_CONFIG>();
	extern STRUCT_INFO _rfl_struct_DATATEST_BASE_CONFIG_info;
}

const _U32 KNIGHT_DESCRIPTION_MAX = 256;

const _U32 KNIGHT_RESOURCE_URL_MAX = 128;


#pragma pack(pop)

#endif
