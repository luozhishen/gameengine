////////////////////////////////////////////////
// THIS FILE IS AUTOGENERATED. DO NOT MODIFY! //
////////////////////////////////////////////////

#include <ZionBase.h>
#include "CommonDDL.h"

namespace DDL
{
	template<>
	bool BufferReader::Read<A_CONTENT_OBJECT>(A_CONTENT_OBJECT& Value)
	{
		if(!Read<A_UUID>(Value._uuid)) return false;
		if(!ReadString<100>(Value._name)) return false;
		return true;
	}
	template<>
	bool BufferWriter::Write<A_CONTENT_OBJECT>(const A_CONTENT_OBJECT& Value)
	{
		if(!Write<A_UUID>(Value._uuid)) return false;
		if(!WriteString<100>(Value._name)) return false;
		return true;
	}
}

namespace DDLReflect
{

	static bool _struct_A_CONTENT_OBJECT_readproc(DDL::BufferReader& buf, void* data)
	{
		return buf.Read<A_CONTENT_OBJECT>(*((A_CONTENT_OBJECT*)data));
	}

	static bool _struct_A_CONTENT_OBJECT_writeproc(DDL::BufferWriter& buf, const void* data)
	{
		return buf.Write<A_CONTENT_OBJECT>(*((const A_CONTENT_OBJECT*)data));
	}

	static FIELD_INFO _struct_A_CONTENT_OBJECT_fieldinfo[] =
	{
		{TYPE_UUID, "_uuid", 0|FLAG_READONLY, (_U16)ZION_OFFSETOF(A_CONTENT_OBJECT, _uuid), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(A_UUID), NULL},
		{TYPE_STRING, "_name", 0|FLAG_NOTNULL, (_U16)ZION_OFFSETOF(A_CONTENT_OBJECT, _name), NULL, (_U16)100, (_U16)-1, (_U16)0, (_U16)sizeof(DDL::String<100>), NULL},
	};
	STRUCT_INFO _rfl_struct_A_CONTENT_OBJECT_info = { NULL, "A_CONTENT_OBJECT", sizeof(A_CONTENT_OBJECT), 2, _struct_A_CONTENT_OBJECT_fieldinfo, _struct_A_CONTENT_OBJECT_readproc, _struct_A_CONTENT_OBJECT_writeproc };
	template<>
	const STRUCT_INFO* GetStruct<A_CONTENT_OBJECT>()
	{
		return &_rfl_struct_A_CONTENT_OBJECT_info;
	}
}

namespace DDL
{
	template<>
	bool BufferReader::Read<A_LIVE_OBJECT>(A_LIVE_OBJECT& Value)
	{
		if(!Read<A_UUID>(Value._uuid)) return false;
		return true;
	}
	template<>
	bool BufferWriter::Write<A_LIVE_OBJECT>(const A_LIVE_OBJECT& Value)
	{
		if(!Write<A_UUID>(Value._uuid)) return false;
		return true;
	}
}

namespace DDLReflect
{

	static bool _struct_A_LIVE_OBJECT_readproc(DDL::BufferReader& buf, void* data)
	{
		return buf.Read<A_LIVE_OBJECT>(*((A_LIVE_OBJECT*)data));
	}

	static bool _struct_A_LIVE_OBJECT_writeproc(DDL::BufferWriter& buf, const void* data)
	{
		return buf.Write<A_LIVE_OBJECT>(*((const A_LIVE_OBJECT*)data));
	}

	static FIELD_INFO _struct_A_LIVE_OBJECT_fieldinfo[] =
	{
		{TYPE_UUID, "_uuid", 0, (_U16)ZION_OFFSETOF(A_LIVE_OBJECT, _uuid), NULL, (_U16)-1, (_U16)-1, (_U16)0, (_U16)sizeof(A_UUID), NULL},
	};
	STRUCT_INFO _rfl_struct_A_LIVE_OBJECT_info = { NULL, "A_LIVE_OBJECT", sizeof(A_LIVE_OBJECT), 1, _struct_A_LIVE_OBJECT_fieldinfo, _struct_A_LIVE_OBJECT_readproc, _struct_A_LIVE_OBJECT_writeproc };
	template<>
	const STRUCT_INFO* GetStruct<A_LIVE_OBJECT>()
	{
		return &_rfl_struct_A_LIVE_OBJECT_info;
	}
}

namespace DDLReflect
{
	static FIELD_INFO _class_DATASYNC_C2S_fieldinfos[] = 
	{
		// 0 CreateObject
		{TYPE_STRING, "type", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		{TYPE_STRING, "data", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		// 1 RemoveObject
		{TYPE_UUID, "_uuid", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		// 2 UpdateObject
		{TYPE_UUID, "_uuid", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		{TYPE_STRING, "data", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
	};
	static FUNCTION_INFO _class_DATASYNC_C2S_funcinfos[] = 
	{
		{"CreateObject", 2, _class_DATASYNC_C2S_fieldinfos+0},
		{"RemoveObject", 1, _class_DATASYNC_C2S_fieldinfos+2},
		{"UpdateObject", 2, _class_DATASYNC_C2S_fieldinfos+3},
	};
	static CLASS_INFO _class_DATASYNC_C2S_info = { 0, "DATASYNC_C2S", 3, _class_DATASYNC_C2S_funcinfos };
	template<>
	const CLASS_INFO* GetClass<DATASYNC_C2S>()
	{
		return &_class_DATASYNC_C2S_info;
	}
}

namespace DDLReflect
{
	static FIELD_INFO _class_DATASYNC_S2C_fieldinfos[] = 
	{
		// 0 SyncStart
		{TYPE_U16, "mode", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		// 1 SyncReady
		// 2 SyncDisable
		// 3 CreateObjectDone
		{TYPE_UUID, "_uuid", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		// 4 CreateObject
		{TYPE_UUID, "_uuid", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		{TYPE_STRING, "type", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		{TYPE_STRING, "data", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		// 5 RemoveObject
		{TYPE_UUID, "_uuid", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		// 6 UpdateObject
		{TYPE_UUID, "_uuid", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
		{TYPE_STRING, "data", 0, 0, NULL, (_U16)-1,(_U16) -1, 0, 0, NULL},
	};
	static FUNCTION_INFO _class_DATASYNC_S2C_funcinfos[] = 
	{
		{"SyncStart", 1, _class_DATASYNC_S2C_fieldinfos+0},
		{"SyncReady", 0, _class_DATASYNC_S2C_fieldinfos+1},
		{"SyncDisable", 0, _class_DATASYNC_S2C_fieldinfos+1},
		{"CreateObjectDone", 1, _class_DATASYNC_S2C_fieldinfos+1},
		{"CreateObject", 3, _class_DATASYNC_S2C_fieldinfos+2},
		{"RemoveObject", 1, _class_DATASYNC_S2C_fieldinfos+5},
		{"UpdateObject", 2, _class_DATASYNC_S2C_fieldinfos+6},
	};
	static CLASS_INFO _class_DATASYNC_S2C_info = { 0, "DATASYNC_S2C", 7, _class_DATASYNC_S2C_funcinfos };
	template<>
	const CLASS_INFO* GetClass<DATASYNC_S2C>()
	{
		return &_class_DATASYNC_S2C_info;
	}
}

